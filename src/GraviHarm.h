
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef GRAVIHARM_H
#define GRAVIHARM_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "GraviHarm.tables.h"

typedef struct _tuple___real_int_int_int__ {
   float field_0;
   int field_1;
   int field_2;
   int field_3;
} _tuple___real_int_int_int__;

typedef struct GraviHarm__ctx_type_0 {
   int pre_x;
} GraviHarm__ctx_type_0;

typedef GraviHarm__ctx_type_0 GraviHarm_change_type;

static_inline void GraviHarm__ctx_type_0_init(GraviHarm__ctx_type_0 &_output_){
   GraviHarm__ctx_type_0 _ctx;
   _ctx.pre_x = 0;
   _output_ = _ctx;
   return ;
}

static_inline void GraviHarm_change_init(GraviHarm__ctx_type_0 &_output_){
   GraviHarm__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t GraviHarm_change(GraviHarm__ctx_type_0 &_ctx, int x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct GraviHarm__ctx_type_1 {
   uint8_t pre;
} GraviHarm__ctx_type_1;

typedef GraviHarm__ctx_type_1 GraviHarm_edge_type;

static_inline void GraviHarm__ctx_type_1_init(GraviHarm__ctx_type_1 &_output_){
   GraviHarm__ctx_type_1 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void GraviHarm_edge_init(GraviHarm__ctx_type_1 &_output_){
   GraviHarm__ctx_type_1_init(_output_);
   return ;
}

static_inline uint8_t GraviHarm_edge(GraviHarm__ctx_type_1 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

typedef struct GraviHarm__ctx_type_2 {
   int count;
} GraviHarm__ctx_type_2;

typedef GraviHarm__ctx_type_2 GraviHarm_counter_type;

static_inline void GraviHarm__ctx_type_2_init(GraviHarm__ctx_type_2 &_output_){
   GraviHarm__ctx_type_2 _ctx;
   _ctx.count = 0;
   _output_ = _ctx;
   return ;
}

static_inline void GraviHarm_counter_init(GraviHarm__ctx_type_2 &_output_){
   GraviHarm__ctx_type_2_init(_output_);
   return ;
}

static_inline int GraviHarm_counter(GraviHarm__ctx_type_2 &_ctx){
   _ctx.count = (1 + _ctx.count);
   if((_ctx.count < 0) || (_ctx.count > 25)){
      _ctx.count = 0;
   }
   return _ctx.count;
}

typedef GraviHarm__ctx_type_2 GraviHarm_reset_type;

static_inline void GraviHarm_reset_init(GraviHarm__ctx_type_2 &_output_){
   GraviHarm__ctx_type_2_init(_output_);
   return ;
}

static_inline void GraviHarm_reset(GraviHarm__ctx_type_2 &_ctx){
   _ctx.count = 0;
};

typedef struct GraviHarm__ctx_type_3 {
   int process_ret_3;
   int process_ret_2;
   int process_ret_1;
   float process_ret_0;
   float planeLevel;
   GraviHarm__ctx_type_2 plan;
   float noteLevel;
   GraviHarm__ctx_type_2 note;
   int knobPlan;
   int knobOcta;
   int knobNote;
   int knobChor;
   int countPlan;
   int countNote;
   int countChor;
   float chordLevel;
   GraviHarm__ctx_type_2 chor;
   GraviHarm__ctx_type_0 _inst93d;
   GraviHarm__ctx_type_0 _inst73d;
   GraviHarm__ctx_type_1 _inst51b;
   GraviHarm__ctx_type_1 _inst31b;
   GraviHarm__ctx_type_1 _inst131b;
   GraviHarm__ctx_type_1 _inst11b;
   GraviHarm__ctx_type_0 _inst113d;
} GraviHarm__ctx_type_3;

typedef GraviHarm__ctx_type_3 GraviHarm_process_type;

void GraviHarm__ctx_type_3_init(GraviHarm__ctx_type_3 &_output_);

static_inline void GraviHarm_process_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

void GraviHarm_process(GraviHarm__ctx_type_3 &_ctx, float inNote, float inChord, float inPlan, float trigNote, float trigChor, float trigPlan, float reset, float fs);

typedef GraviHarm__ctx_type_3 GraviHarm_process_ret_0_type;

static_inline void GraviHarm_process_ret_0_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline float GraviHarm_process_ret_0(GraviHarm__ctx_type_3 &_ctx){
   return _ctx.process_ret_0;
};

typedef GraviHarm__ctx_type_3 GraviHarm_process_ret_1_type;

static_inline void GraviHarm_process_ret_1_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline int GraviHarm_process_ret_1(GraviHarm__ctx_type_3 &_ctx){
   return _ctx.process_ret_1;
};

typedef GraviHarm__ctx_type_3 GraviHarm_process_ret_2_type;

static_inline void GraviHarm_process_ret_2_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline int GraviHarm_process_ret_2(GraviHarm__ctx_type_3 &_ctx){
   return _ctx.process_ret_2;
};

typedef GraviHarm__ctx_type_3 GraviHarm_process_ret_3_type;

static_inline void GraviHarm_process_ret_3_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline int GraviHarm_process_ret_3(GraviHarm__ctx_type_3 &_ctx){
   return _ctx.process_ret_3;
};

typedef GraviHarm__ctx_type_3 GraviHarm_setKnobNote_type;

static_inline void GraviHarm_setKnobNote_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline void GraviHarm_setKnobNote(GraviHarm__ctx_type_3 &_ctx, int knob){
   _ctx.knobNote = knob;
};

typedef GraviHarm__ctx_type_3 GraviHarm_setKnobChor_type;

static_inline void GraviHarm_setKnobChor_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline void GraviHarm_setKnobChor(GraviHarm__ctx_type_3 &_ctx, int knob){
   _ctx.knobChor = knob;
};

typedef GraviHarm__ctx_type_3 GraviHarm_setKnobPlan_type;

static_inline void GraviHarm_setKnobPlan_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline void GraviHarm_setKnobPlan(GraviHarm__ctx_type_3 &_ctx, int knob){
   _ctx.knobPlan = knob;
};

typedef GraviHarm__ctx_type_3 GraviHarm_setKnobOcta_type;

static_inline void GraviHarm_setKnobOcta_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

static_inline void GraviHarm_setKnobOcta(GraviHarm__ctx_type_3 &_ctx, int knob){
   _ctx.knobOcta = knob;
};

typedef GraviHarm__ctx_type_3 GraviHarm_default_type;

static_inline void GraviHarm_default_init(GraviHarm__ctx_type_3 &_output_){
   GraviHarm__ctx_type_3_init(_output_);
   return ;
}

void GraviHarm_default(GraviHarm__ctx_type_3 &_ctx);



#endif // GRAVIHARM_H
