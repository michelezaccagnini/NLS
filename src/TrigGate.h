
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef TRIGGATE_H
#define TRIGGATE_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "TrigGate.tables.h"

typedef struct _tuple___real_real__ {
   float field_0;
   float field_1;
} _tuple___real_real__;

typedef struct TrigGate__ctx_type_0 {
   uint8_t pre;
} TrigGate__ctx_type_0;

typedef TrigGate__ctx_type_0 TrigGate_edge_type;

static_inline void TrigGate__ctx_type_0_init(TrigGate__ctx_type_0 &_output_){
   TrigGate__ctx_type_0 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void TrigGate_edge_init(TrigGate__ctx_type_0 &_output_){
   TrigGate__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t TrigGate_edge(TrigGate__ctx_type_0 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

typedef struct TrigGate__ctx_type_1 {
   float pre_x;
} TrigGate__ctx_type_1;

typedef TrigGate__ctx_type_1 TrigGate_change_type;

static_inline void TrigGate__ctx_type_1_init(TrigGate__ctx_type_1 &_output_){
   TrigGate__ctx_type_1 _ctx;
   _ctx.pre_x = 0.0f;
   _output_ = _ctx;
   return ;
}

static_inline void TrigGate_change_init(TrigGate__ctx_type_1 &_output_){
   TrigGate__ctx_type_1_init(_output_);
   return ;
}

static_inline uint8_t TrigGate_change(TrigGate__ctx_type_1 &_ctx, float x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct TrigGate__ctx_type_2 {
   int state;
   float dur;
   TrigGate__ctx_type_0 _inst291;
} TrigGate__ctx_type_2;

typedef TrigGate__ctx_type_2 TrigGate_trig2gate_type;

void TrigGate__ctx_type_2_init(TrigGate__ctx_type_2 &_output_);

static_inline void TrigGate_trig2gate_init(TrigGate__ctx_type_2 &_output_){
   TrigGate__ctx_type_2_init(_output_);
   return ;
}

float TrigGate_trig2gate(TrigGate__ctx_type_2 &_ctx, float trig, float len, float st);

typedef TrigGate__ctx_type_2 TrigGate_init_type;

static_inline void TrigGate_init_init(TrigGate__ctx_type_2 &_output_){
   TrigGate__ctx_type_2_init(_output_);
   return ;
}

static_inline void TrigGate_init(TrigGate__ctx_type_2 &_ctx){
   _ctx.state = 0;
   _ctx.dur = 0.0f;
}

typedef struct TrigGate__ctx_type_3 {
   float process_ret_1;
   float process_ret_0;
   float gateLen2;
   float gateLen1;
   TrigGate__ctx_type_2 _inst2da;
   TrigGate__ctx_type_2 _inst1da;
} TrigGate__ctx_type_3;

typedef TrigGate__ctx_type_3 TrigGate_process_type;

void TrigGate__ctx_type_3_init(TrigGate__ctx_type_3 &_output_);

static_inline void TrigGate_process_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

void TrigGate_process(TrigGate__ctx_type_3 &_ctx, float trig1, float trig2, float st);

typedef TrigGate__ctx_type_3 TrigGate_process_ret_0_type;

static_inline void TrigGate_process_ret_0_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

static_inline float TrigGate_process_ret_0(TrigGate__ctx_type_3 &_ctx){
   return _ctx.process_ret_0;
};

typedef TrigGate__ctx_type_3 TrigGate_process_ret_1_type;

static_inline void TrigGate_process_ret_1_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

static_inline float TrigGate_process_ret_1(TrigGate__ctx_type_3 &_ctx){
   return _ctx.process_ret_1;
};

typedef TrigGate__ctx_type_3 TrigGate_setGateLen1_type;

static_inline void TrigGate_setGateLen1_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigGate_setGateLen1(TrigGate__ctx_type_3 &_ctx, float value){
   _ctx.gateLen1 = value;
};

typedef TrigGate__ctx_type_3 TrigGate_setGateLen2_type;

static_inline void TrigGate_setGateLen2_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigGate_setGateLen2(TrigGate__ctx_type_3 &_ctx, float value){
   _ctx.gateLen2 = value;
};

typedef TrigGate__ctx_type_3 TrigGate_default_type;

static_inline void TrigGate_default_init(TrigGate__ctx_type_3 &_output_){
   TrigGate__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigGate_default(TrigGate__ctx_type_3 &_ctx){
   _ctx.gateLen1 = 0.2f;
   _ctx.gateLen2 = 0.2f;
}



#endif // TRIGGATE_H
